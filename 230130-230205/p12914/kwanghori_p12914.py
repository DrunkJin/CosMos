def solution(n):
    '''
    규칙성을 찾는 문제
    n | cnt
    1    1
    2    2
    3    3
    4    5
    5    8
    6   13
    피보나치 수열의 특성을 보임 (1+2=3, 2+3=5, 3+5=8, 5+8=13, ...)
    '''
    if n <= 2:  # n <= 2의 경우, 칸을 이동하는 방법은 n가지
        answer = n
    else:
        numbers = [1,2]   # 리스트에 n=1,2의 결과를 미리 저장하고, 호출하며 3부터 n까지의 칸을 이동하는 방법을 계산함
        for i in range(3,n+1): # (3, 4, 5, ..., n)
            n_cnts = numbers[i-3] + numbers[i-2]
            # (number[0]+number[1], number[1]+number[2], ..., number[n-3], number[n-2])
            numbers.append(n_cnts)  # number[i-1]에 i개의 칸을 이동하는 방법을 저장
        answer = numbers[n-1]
    return answer % 1234567
  
  
'''
채점을 시작합니다.
정확성  테스트
테스트 1 〉	통과 (0.00ms, 10MB)
테스트 2 〉	통과 (0.00ms, 10.4MB)
테스트 3 〉	통과 (0.01ms, 10.2MB)
테스트 4 〉	통과 (0.01ms, 10.2MB)
테스트 5 〉	통과 (0.01ms, 10.4MB)
테스트 6 〉	통과 (0.01ms, 10.2MB)
테스트 7 〉	통과 (0.10ms, 10.2MB)
테스트 8 〉	통과 (0.05ms, 10MB)
테스트 9 〉	통과 (0.04ms, 10.1MB)
테스트 10 〉	통과 (0.03ms, 10.1MB)
테스트 11 〉	통과 (0.37ms, 10.4MB)
테스트 12 〉	통과 (0.55ms, 10.1MB)
테스트 13 〉	통과 (0.18ms, 10.2MB)
테스트 14 〉	통과 (0.46ms, 10.4MB)
테스트 15 〉	통과 (0.32ms, 10.1MB)
테스트 16 〉	통과 (0.71ms, 10.3MB)
채점 결과
정확성: 100.0
합계: 100.0 / 100.0
'''
